[gd_scene load_steps=4 format=2]

[sub_resource type="World" id=1]

[sub_resource type="Shader" id=58]
code = "shader_type canvas_item;

uniform int pixelSize = 4;

void fragment()
{
	
	ivec2 size = textureSize(TEXTURE, 0);
	
	int xRes = size.x;
	int yRes = size.y;
	
	float xFactor = float(xRes) / float(pixelSize);
	float yFactor = float(yRes) / float(pixelSize);
	
	float grid_uv_x = round(UV.x * xFactor) / xFactor;
	float grid_uv_y = round(UV.y * yFactor) / yFactor;
	
	vec4 text = texture(TEXTURE, vec2(grid_uv_x, grid_uv_y));
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=59]
shader = SubResource( 58 )
shader_param/pixelSize = 4

[node name="Node2D" type="Node2D"]

[node name="ViewportContainer" type="ViewportContainer" parent="."]
margin_right = 1024.0
margin_bottom = 600.0

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 800, 600 )
world = SubResource( 1 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Camera" type="Camera" parent="ViewportContainer/Viewport"]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 0.453, 0.515 )
current = true

[node name="CSGBox" type="CSGBox" parent="ViewportContainer/Viewport"]

[node name="Camera2D" type="Camera2D" parent="."]

[node name="CanvasLayer" type="CanvasLayer" parent="Camera2D"]

[node name="ColorRect" type="ColorRect" parent="Camera2D/CanvasLayer"]
material = SubResource( 59 )
anchor_right = 1.0
anchor_bottom = 1.0
